/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI_Input;

import BUS.PhieuNhapBUS;
import BUS.CTPNBUS;
import DTO.CTPNDTO;
import DTO.PhieuNhapDTO;
import MSForm.msfMaNV;
import MSForm.msfMaNCC;
import MSForm.msfMaSP;
import java.awt.Font;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import java.util.ArrayList;
import javax.swing.event.DocumentListener;
import javax.swing.event.DocumentEvent;

/**
 *
 * @author laptop
 */
public class ThemPhieuNhap extends javax.swing.JDialog {
    public boolean xacNhan = false;
    public PhieuNhapDTO pn;
    public CTPNDTO ctpn;
    public ArrayList<CTPNDTO> dsCTPN = new ArrayList<>();
    public PhieuNhapBUS pnbus = new PhieuNhapBUS();
    
    /**
     * Creates new form ThemPhieuNhap
     */
    public ThemPhieuNhap(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        cbxPhienBan.addItem("1");
        tMaPN.setText(String.valueOf(pnbus.getAI()));
        setupAutoCalculation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tMaNV = new javax.swing.JTextField();
        tMaNCC = new javax.swing.JTextField();
        btnMoreMaNV = new javax.swing.JButton();
        btnMoreMaNCC = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        btnThemPN = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tMaPN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tMaSP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tSoLuong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tDonGia = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tThanhTien = new javax.swing.JTextField();
        cbxPhienBan = new javax.swing.JComboBox<>();
        btnMoreSP = new javax.swing.JButton();
        btnXoaCTPN = new javax.swing.JButton();
        btnThemCTPN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSP = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        tTongTien = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THÊM PHIẾU NHẬP");
        jLabel1.setFocusable(false);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("Mã NCC:");

        jLabel3.setText("Mã NV:");

        btnMoreMaNV.setText("...");
        btnMoreMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreMaNVActionPerformed(evt);
            }
        });

        btnMoreMaNCC.setText("...");
        btnMoreMaNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreMaNCCActionPerformed(evt);
            }
        });

        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnThemPN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemPN.setText("Thêm");
        btnThemPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPNActionPerformed(evt);
            }
        });

        jLabel4.setText("Mã PN:");

        tMaPN.setEditable(false);

        jLabel5.setText("Mã SP:");

        jLabel6.setText("Số lượng:");

        jLabel7.setText("Phiên bản:");

        jLabel8.setText("Đơn giá:");

        jLabel10.setText("Thành tiền:");

        tThanhTien.setEditable(false);

        btnMoreSP.setText("...");
        btnMoreSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreSPActionPerformed(evt);
            }
        });

        btnXoaCTPN.setText("Xóa sản phẩm");
        btnXoaCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTPNActionPerformed(evt);
            }
        });

        btnThemCTPN.setText("Thêm sản phẩm");
        btnThemCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCTPNActionPerformed(evt);
            }
        });

        tbSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên SP", "Phiên bản", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSP.setColumnSelectionAllowed(true);
        tbSP.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbSP);
        tbSP.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel9.setText("Tổng:");

        tTongTien.setEditable(false);

        jLabel11.setText("Đ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 42, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(btnThemPN, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnMoreSP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(cbxPhienBan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(btnXoaCTPN)
                                        .addGap(34, 34, 34)
                                        .addComponent(btnThemCTPN)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnMoreMaNCC))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnMoreMaNV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(17, 17, 17))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMoreMaNV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMoreMaNCC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(278, 278, 278)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThemPN, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnThemCTPN, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnXoaCTPN, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnMoreSP))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxPhienBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMoreMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreMaNVActionPerformed
        // TODO add your handling code here:
        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        msfMaNV msfDialog = new msfMaNV(topFrame, true);
        msfDialog.setVisible(true);
        
        
        if(msfDialog.xacNhanChon())
        {
            int manv = msfDialog.getMANV();
            tMaNV.setText(String.valueOf(manv));
        }
    }//GEN-LAST:event_btnMoreMaNVActionPerformed

    private void btnMoreMaNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreMaNCCActionPerformed
        // TODO add your handling code here:
        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        msfMaNCC msfDialog = new msfMaNCC(topFrame, true);
        msfDialog.setVisible(true);
        
        
        if(msfDialog.xacNhanChon())
        {
            int manv = msfDialog.getMANV();
            tMaNCC.setText(String.valueOf(manv));
        }
    }//GEN-LAST:event_btnMoreMaNCCActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        xacNhan=false;
        dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnThemPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPNActionPerformed
        // Validate inputs
        if(tMaNV.getText().isEmpty() || tMaNCC.getText().isEmpty()){
            JLabel lbTBnull = new JLabel("Không được để trống!");
            lbTBnull.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTBnull, "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check if employee ID exists
        if(new PhieuNhapBUS().ktraMaNV(Integer.parseInt(tMaNV.getText())) == false) {
            JLabel lbTBnull = new JLabel("Mã NV không tồn tại!");
            lbTBnull.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTBnull, "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check if supplier ID exists
        if(new PhieuNhapBUS().ktraMaNCC(Integer.parseInt(tMaNCC.getText())) == false) {
            JLabel lbTBnull = new JLabel("Mã NCC không tồn tại!");
            lbTBnull.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTBnull, "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check if product list is empty
        if(dsCTPN.isEmpty()) {
            JLabel lbTBnull = new JLabel("Chưa có sản phẩm nào trong phiếu nhập!");
            lbTBnull.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTBnull, "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            // Create PhieuNhap
            int manv = Integer.parseInt(tMaNV.getText());
            int mancc = Integer.parseInt(tMaNCC.getText());
            int tongTien = Integer.parseInt(tTongTien.getText());
            
            // Get current date
            java.time.LocalDateTime now = java.time.LocalDateTime.now();
            java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String ngayNhap = now.format(formatter);
            
            // Create PhieuNhap object
            pn = new PhieuNhapDTO(0, manv, mancc, tongTien, ngayNhap);
            
            // Add to database via BUS
            PhieuNhapBUS pnBUS = new PhieuNhapBUS();
            
            // Initialize if null
            if (pnBUS.ds == null) {
                pnBUS.docDSPN();
            }
            
            boolean resultPN = pnBUS.them(pn);
            
            if(resultPN) {
                // Get the latest MAPN
                pnBUS.docDSPN();
                int latestIndex = pnBUS.ds.size() - 1;
                int actualMapn = pnBUS.ds.get(latestIndex).getMaPN();

                System.out.println("Mã phiếu nhập thực tế: " + actualMapn);
                
                // Add all CTPN to database via BUS
                CTPNBUS ctpnBUS = new CTPNBUS();
                boolean allSuccess = true;
                System.out.println("=== DANH SÁCH CTPN ĐƯỢC THÊM VÀO DATABASE ===");
                int count = 1;

                for(CTPNDTO item : dsCTPN) {
                    item.setMaPN(actualMapn);
                    System.out.println("-- CTPN #" + count + " --");
                    System.out.println("Mã PN: " + item.getMaPN());
                    System.out.println("Mã SP: " + item.getMaSP());
                    System.out.println("Phiên bản: " + item.getMaPB());
                    System.out.println("Số lượng: " + item.getSoLuong());
                    System.out.println("Đơn giá: " + item.getDonGia());
                    System.out.println("Thành tiền: " + item.getThanhTien());
                    System.out.println("--------------");
                    count++;
                    // Add to database via BUS
                    boolean resultCTPN = ctpnBUS.them(item);
                    if(!resultCTPN) {
                        allSuccess = false;
                        break;
                    }
                    
                }
                
                if(allSuccess) {
                    JLabel lbTB = new JLabel("Thêm phiếu nhập thành công!");
                    lbTB.setFont(new Font("Segoe UI", Font.BOLD, 16));
                    JOptionPane.showMessageDialog(this, lbTB, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    xacNhan = true;
                    dispose();
                } else {
                    JLabel lbTB = new JLabel("Lỗi khi thêm chi tiết phiếu nhập!");
                    lbTB.setFont(new Font("Segoe UI", Font.BOLD, 16));
                    JOptionPane.showMessageDialog(this, lbTB, "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JLabel lbTB = new JLabel("Lỗi khi thêm phiếu nhập!");
                lbTB.setFont(new Font("Segoe UI", Font.BOLD, 16));
                JOptionPane.showMessageDialog(this, lbTB, "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JLabel lbTB = new JLabel("Lỗi xảy ra: " + e.getMessage());
            lbTB.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTB, "Thông báo", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemPNActionPerformed

    private void btnMoreSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreSPActionPerformed
        // TODO add your handling code here:
        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        msfMaSP msfDialog = new msfMaSP(topFrame, true);
        msfDialog.setVisible(true);
        
        
        if(msfDialog.xacNhanTim())
        {
            int manv = msfDialog.getMaSP();
            tMaSP.setText(String.valueOf(manv));
        }
    }//GEN-LAST:event_btnMoreSPActionPerformed

    private void btnThemCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCTPNActionPerformed
        // Validate inputs
        if(tMaSP.getText().isEmpty() || tSoLuong.getText().isEmpty() || tDonGia.getText().isEmpty()) {
            JLabel lbTBnull = new JLabel("Vui lòng điền đầy đủ thông tin sản phẩm!");
            lbTBnull.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTBnull, "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            // Get values from input fields
            int mapn = Integer.parseInt(tMaPN.getText().trim());
            int masp = Integer.parseInt(tMaSP.getText());
            int mapb = 1; // Set phiên bản to 1 as specified
            int soLuong = Integer.parseInt(tSoLuong.getText());
            int donGia = Integer.parseInt(tDonGia.getText());
            int thanhTien = soLuong * donGia;
            
            // Set thanh tien field
            tThanhTien.setText(String.valueOf(thanhTien));
            
            // Create CTPN object and add to list (MAPN will be set later)
            ctpn = new CTPNDTO(0, masp, mapb, soLuong, donGia, thanhTien);
            dsCTPN.add(ctpn);

            System.out.println("=== THÊM CTPN VÀO DANH SÁCH ===");
            System.out.println("Mã SP: " + masp);
            System.out.println("Phiên bản: " + mapb);
            System.out.println("Số lượng: " + soLuong);
            System.out.println("Đơn giá: " + donGia);
            System.out.println("Thành tiền: " + thanhTien);
            System.out.println("Tổng số CTPN hiện tại: " + dsCTPN.size());
            System.out.println("===========================");
            
            // Update tong tien
            updateTongTien();
            
            // Refresh table
            loadTableData();
            
            // Clear input fields
            clearInputFields();
            
            JLabel lbTB = new JLabel("Đã thêm sản phẩm vào phiếu nhập!");
            lbTB.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTB, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException e) {
            JLabel lbTBnull = new JLabel("Dữ liệu không hợp lệ!");
            lbTBnull.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTBnull, "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemCTPNActionPerformed

    private void btnXoaCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTPNActionPerformed
        // Check if a row is selected
        int selectedRow = tbSP.getSelectedRow();
        if (selectedRow == -1) {
            JLabel lbTB = new JLabel("Vui lòng chọn sản phẩm cần xóa!");
            lbTB.setFont(new Font("Segoe UI", Font.BOLD, 16));
            JOptionPane.showMessageDialog(this, lbTB, "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Remove from list
        dsCTPN.remove(selectedRow);
        
        // Update total amount
        updateTongTien();
        
        // Refresh table
        loadTableData();
        
        JLabel lbTB = new JLabel("Đã xóa sản phẩm khỏi phiếu nhập!");
        lbTB.setFont(new Font("Segoe UI", Font.BOLD, 16));
        JOptionPane.showMessageDialog(this, lbTB, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnXoaCTPNActionPerformed
    public boolean xacNhanThem()
    {                   
        return xacNhan;
    }
    public PhieuNhapDTO getPN()
    {
        return pn;
    }
    // Helper method to update total price
    private void updateTongTien() {
        int total = 0;
        for (CTPNDTO item : dsCTPN) {
            total += item.getThanhTien();
        }
        tTongTien.setText(String.valueOf(total));
    }

    // Helper method to load data to table
    private void loadTableData() {
        String[] headerNames = {"Mã SP", "Phiên bản", "Số lượng", "Đơn giá", "Thành tiền"};
        Object[][] data = new Object[dsCTPN.size()][5];
        
        for (int i = 0; i < dsCTPN.size(); i++) {
            CTPNDTO item = dsCTPN.get(i);
            data[i][0] = item.getMaSP();
            data[i][1] = 1; // Display phiên bản as 1
            data[i][2] = item.getSoLuong();
            data[i][3] = item.getDonGia();
            data[i][4] = item.getThanhTien();
        }
        
        tbSP.setModel(new javax.swing.table.DefaultTableModel(data, headerNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
    }
    private void calculateThanhTien() {
        try {
            // Get values from fields (default to 0 if empty)
            int soLuong = tSoLuong.getText().isEmpty() ? 0 : Integer.parseInt(tSoLuong.getText());
            int donGia = tDonGia.getText().isEmpty() ? 0 : Integer.parseInt(tDonGia.getText());
            
            // Calculate and set ThanhTien
            int thanhTien = soLuong * donGia;
            tThanhTien.setText(String.valueOf(thanhTien));
        } catch (NumberFormatException e) {
            // If input is not a valid number, set ThanhTien to 0
            tThanhTien.setText("0");
        }
    }

    // Helper method to clear input fields
    private void clearInputFields() {
        tMaSP.setText("");
        tSoLuong.setText("");
        tDonGia.setText("");
    }
    private void setupAutoCalculation() {
        // Add document listener for SoLuong field
        tSoLuong.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                calculateThanhTien();
            }
    
            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                calculateThanhTien();
            }
    
            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                calculateThanhTien();
            }
        });
        
        // Add document listener for DonGia field
        tDonGia.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                calculateThanhTien();
            }
    
            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                calculateThanhTien();
            }
    
            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                calculateThanhTien();
            }
        });
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnMoreMaNCC;
    private javax.swing.JButton btnMoreMaNV;
    private javax.swing.JButton btnMoreSP;
    private javax.swing.JButton btnThemCTPN;
    private javax.swing.JButton btnThemPN;
    private javax.swing.JButton btnXoaCTPN;
    private javax.swing.JComboBox<String> cbxPhienBan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tDonGia;
    private javax.swing.JTextField tMaNCC;
    private javax.swing.JTextField tMaNV;
    private javax.swing.JTextField tMaPN;
    private javax.swing.JTextField tMaSP;
    private javax.swing.JTextField tSoLuong;
    private javax.swing.JTextField tThanhTien;
    private javax.swing.JTextField tTongTien;
    private javax.swing.JTable tbSP;
    // End of variables declaration//GEN-END:variables
}
