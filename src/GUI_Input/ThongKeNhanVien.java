/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI_Input;

import BUS.NhanVienBUS;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent; // Thêm import này
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Vector;
/**
 *
 * @author suvie
 */
public class ThongKeNhanVien extends javax.swing.JDialog {

    /**
     * Creates new form ThongKeNhanVien
     */
    private NhanVienBUS nhanVienBUS;
    private DefaultTableModel modelThongKe;
    public ThongKeNhanVien(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupThongKe = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnThoat = new javax.swing.JButton();
        rdoTheoDiaChi = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        rdoTheoQuy = new javax.swing.JRadioButton();
        btnXemThongKe = new javax.swing.JButton();
        pnlChonNam = new javax.swing.JPanel();
        spnNam = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongKeNV = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THÔNG KÊ NHÂN VIÊN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        btnThoat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        rdoTheoDiaChi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdoTheoDiaChi.setText("Thống kê theo địa chỉ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Chọn thống kê");

        rdoTheoQuy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdoTheoQuy.setText("Thống kê lương theo quý năm");

        btnXemThongKe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXemThongKe.setText("Xem thống kê");
        btnXemThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemThongKeActionPerformed(evt);
            }
        });

        spnNam.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Năm: ");

        javax.swing.GroupLayout pnlChonNamLayout = new javax.swing.GroupLayout(pnlChonNam);
        pnlChonNam.setLayout(pnlChonNamLayout);
        pnlChonNamLayout.setHorizontalGroup(
            pnlChonNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChonNamLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(spnNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlChonNamLayout.setVerticalGroup(
            pnlChonNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChonNamLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlChonNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)))
        );

        tblThongKeNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblThongKeNV);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnXemThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoTheoDiaChi))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlChonNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoTheoQuy))))
                .addContainerGap(173, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoTheoDiaChi)
                    .addComponent(rdoTheoQuy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlChonNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXemThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myInit() {
        nhanVienBUS = new NhanVienBUS();
        // Lấy model từ bảng (đã được tạo trong initComponents)
        modelThongKe = (DefaultTableModel) tblThongKeNV.getModel();
        tblThongKeNV.setRowHeight(30);
        tblThongKeNV.setDefaultEditor(Object.class, null); // Không cho sửa trực tiếp
        tblThongKeNV.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Chỉ cho chọn 1 dòng

        // Cấu hình JSpinner
        int currentYear = java.time.Year.now().getValue();
        // Giả sử giới hạn năm từ 2000 đến năm hiện tại + 5
        spnNam.setModel(new SpinnerNumberModel(currentYear, 2000, currentYear + 5, 1));
        // Định dạng Spinner để không hiển thị dấu phẩy
        JSpinner.NumberEditor editor = new JSpinner.NumberEditor(spnNam, "#");
        spnNam.setEditor(editor);

        // Thêm RadioButton vào ButtonGroup (đã có trong initComponents)
        groupThongKe.add(rdoTheoDiaChi);
        groupThongKe.add(rdoTheoQuy); // Sửa tên biến nếu cần

        // Thêm Listener (các listener cho nút đã có trong initComponents)
        // Chỉ cần thêm listener cho RadioButton nếu chưa có trong designer
        addRadioListenersIfNeeded();

        // Thiết lập trạng thái ban đầu
        rdoTheoDiaChi.setSelected(true);
        pnlChonNam.setVisible(false); // Ẩn panel chọn năm
        loadDefaultData(); // Tải dữ liệu mặc định

        // Áp dụng renderer ban đầu sau khi có cột
        applyTableRenderers();

        setLocationRelativeTo(null); // Đặt dialog ra giữa màn hình
    }
    
    private void addRadioListenersIfNeeded() {
        boolean hasActionListenerDiaChi = false;
        for (ActionListener al : rdoTheoDiaChi.getActionListeners()) {
            hasActionListenerDiaChi = true;
            break;
        }
         boolean hasActionListenerQuy = false;
        for (ActionListener al : rdoTheoQuy.getActionListeners()) {
            hasActionListenerQuy = true;
            break;
        }

        // Chỉ thêm nếu chưa có listener nào được gán
        if (!hasActionListenerDiaChi || !hasActionListenerQuy) {
            java.awt.event.ActionListener radioListener = this::radioThongKeActionPerformed;
            // Xóa listener cũ (nếu có từ designer mà bị lỗi) trước khi thêm
            for(ActionListener al : rdoTheoDiaChi.getActionListeners()) rdoTheoDiaChi.removeActionListener(al);
            for(ActionListener al : rdoTheoQuy.getActionListeners()) rdoTheoQuy.removeActionListener(al);
            // Thêm listener mới
            rdoTheoDiaChi.addActionListener(radioListener);
            rdoTheoQuy.addActionListener(radioListener);
        }
    }
    
    private void loadDefaultData() {
        try {
            ArrayList<Object[]> data = nhanVienBUS.thongKeSoLuongTheoDiaChi();
            loadTableDiaChi(data);
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu mặc định: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
             e.printStackTrace();
        }
    }
    
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void btnXemThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemThongKeActionPerformed
        // TODO add your handling code here:
        try {
            if (rdoTheoDiaChi.isSelected()) {
                ArrayList<Object[]> data = nhanVienBUS.thongKeSoLuongTheoDiaChi();
                loadTableDiaChi(data);
            } else if (rdoTheoQuy.isSelected()) {
                int nam = (Integer) spnNam.getValue();
                if (nam <= 0) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn năm hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                ArrayList<Object[]> data = nhanVienBUS.thongKeLuongTheoQuyNam(nam);
                loadTableQuy(data);
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một loại thống kê.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi lấy dữ liệu thống kê: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXemThongKeActionPerformed

    private void radioThongKeActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isQuySelected = rdoTheoQuy.isSelected();
        pnlChonNam.setVisible(isQuySelected); // Hiện/ẩn panel chọn năm

        if (rdoTheoDiaChi.isSelected()) {
            loadDefaultData(); // Tải lại thống kê số lượng theo địa chỉ
        } else {
            // Xóa bảng và chuẩn bị header cho thống kê quý
            modelThongKe.setRowCount(0);
            if (modelThongKe.getColumnCount() != 2 || !modelThongKe.getColumnName(0).equals("Quý")) {
                modelThongKe.setColumnIdentifiers(new String[]{"Quý", "Tổng Lương"});
                applyTableRenderers(); // Áp dụng lại renderer
            }
        }
        // Cập nhật layout của panel chứa các control và panel năm
         jPanel2.revalidate(); // Sửa: Gọi revalidate trên panel cha chứa pnlChonNam
         jPanel2.repaint();
    }
    
    private void loadTableDiaChi(ArrayList<Object[]> data) {
        if (modelThongKe.getColumnCount() != 2 || !modelThongKe.getColumnName(1).equals("Số lượng nhân viên")) {
            modelThongKe.setColumnIdentifiers(new String[]{"Địa chỉ", "Số lượng nhân viên"});
             applyTableRenderers();
        }
        modelThongKe.setRowCount(0);

        if (data != null && !data.isEmpty()) {
            for (Object[] rowData : data) {
                 if (rowData != null && rowData.length >= 2) {
                    Vector<Object> row = new Vector<>();
                    row.add(rowData[0] != null ? rowData[0] : "");
                    row.add(rowData[1] != null ? rowData[1] : 0);
                    modelThongKe.addRow(row);
                 }
            }
        } else {
             System.out.println("Không có dữ liệu thống kê số lượng nhân viên theo địa chỉ.");
        }
    }
    
    private void loadTableQuy(ArrayList<Object[]> data) {
         if (modelThongKe.getColumnCount() != 2 || !modelThongKe.getColumnName(0).equals("Quý")) {
            modelThongKe.setColumnIdentifiers(new String[]{"Quý", "Tổng Lương"});
             applyTableRenderers();
        }
        modelThongKe.setRowCount(0);

        if (data != null && !data.isEmpty()) {
            for (Object[] rowData : data) {
                 if (rowData != null && rowData.length >= 2) {
                    Vector<Object> row = new Vector<>();
                    row.add(rowData[0] != null ? rowData[0] : "");
                    row.add(rowData[1] != null ? rowData[1] : 0);
                    modelThongKe.addRow(row);
                 }
            }
        } else {
             System.out.println("Không có dữ liệu thống kê theo quý cho năm đã chọn.");
        }
    }

    private void applyTableRenderers() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        // Kiểm tra xem bảng đã có cột chưa trước khi áp dụng renderer
        if (tblThongKeNV.getColumnCount() > 0) {
             for (int i = 0; i < tblThongKeNV.getColumnCount(); i++) {
                 // Kiểm tra lại để chắc chắn chỉ số cột hợp lệ
                 if (i < tblThongKeNV.getColumnModel().getColumnCount()) {
                    tblThongKeNV.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
                 }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXemThongKe;
    private javax.swing.ButtonGroup groupThongKe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlChonNam;
    private javax.swing.JRadioButton rdoTheoDiaChi;
    private javax.swing.JRadioButton rdoTheoQuy;
    private javax.swing.JSpinner spnNam;
    private javax.swing.JTable tblThongKeNV;
    // End of variables declaration//GEN-END:variables

}
